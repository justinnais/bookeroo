version: 2.1


commands:
  deploy-microservice:
    parameters:
      git-folder:
        type: string
      jar:
        type: string
      port:
        type: string
      docker-container:
        type: string
      user:
        type: string
      server:
        type: string
    steps:
      - run:
          name: build-and-test-<<parameters.docker-container>>
          command: cd BackEnd/<<parameters.git-folder>>/ && mvn clean package
      - run:
          name: deploy-<<parameters.docker-container>>
          command:
            scp BackEnd/<<parameters.git-folder>>/target/<<parameters.jar>> <<parameters.user>>@<<parameters.server>>:~/BackEnd/<<parameters.git-folder>>/target/<<parameters.jar>> &&
            scp BackEnd/<<parameters.git-folder>>/Dockerfile <<parameters.user>>@<<parameters.server>>:~/BackEnd/<<parameters.git-folder>>/Dockerfile &&
            ssh <<parameters.user>>@<<parameters.server>> '(
              cd BackEnd/<<parameters.git-folder>>/ && 
              sudo docker build -t bookeroo/<<parameters.docker-container>> . &&
              sudo docker run -d -p <<parameters.port>>:8080 bookeroo/<<parameters.docker-container>>
            )'
            

jobs:
  build-backend:  
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "c9:2c:4e:b5:b4:8c:a2:5c:8e:49:a0:b8:06:1c:1a:c3"

      - run: ssh-keyscan $BOOK_AWS >> ~/.ssh/known_hosts
      - run: ssh-keyscan $BOOK_AWS_2 >> ~/.ssh/known_hosts

      - run: ssh ubuntu@$BOOK_AWS '(sudo ~/clean-docker.sh)'
      - run: ssh ec2-user@$BOOK_AWS_2 '(sudo ~/clean-docker.sh)'

      - run: ssh ubuntu@$BOOK_AWS '(sudo docker system prune -f && sudo docker image prune -f)'
      - run: ssh ec2-user@$BOOK_AWS_2 '(sudo docker system prune -f && sudo docker image prune -f)'

      - deploy-microservice:
          git-folder: loginmicroservices
          jar: loginmicroservices-0.0.1.jar
          port: "8080"
          docker-container: login-microservice
          user: "ubuntu"
          server: $BOOK_AWS

      - deploy-microservice:
          git-folder: bookmicroservices
          jar: bookmicroservices-0.0.1.jar
          port: "8081"
          docker-container: book-microservice
          user: "ubuntu"
          server: $BOOK_AWS

      - deploy-microservice:
          git-folder: transmicroservices
          jar: transmicroservices-0.0.1.jar
          port: "8082"
          docker-container: transaction-microservice
          user: "ec2-user"
          server: $BOOK_AWS_2
          
      - deploy-microservice:   
          git-folder: listingmicroservice
          jar: listingmicroservice-0.0.1.jar
          port: "8084"
          docker-container: listing-microservice
          user: "ec2-user"
          server: $BOOK_AWS_2
        
      - deploy-microservice:
          git-folder: reviewmicroservices
          jar: reviewmicroservices-0.0.1.jar
          port: "8085"
          docker-container: review-microservice
          user: "ec2-user"
          server: $BOOK_AWS_2

workflows:
  build-and-test: 
    jobs:
      - build-backend

    

